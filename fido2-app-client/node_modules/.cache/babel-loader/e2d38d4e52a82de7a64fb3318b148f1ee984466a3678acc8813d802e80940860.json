{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Android\\\\FIDO2_webapp\\\\fido2-app-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [currentUsers, setCurrentUsers] = useState([]);\n  const handleRegisterRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/register-request', {\n        username\n      }, {\n        withCredentials: true\n      });\n      const options = response.data;\n      options.challenge = Uint8Array.from(atob(options.challenge), c => c.charCodeAt(0));\n      options.user.id = Uint8Array.from(atob(options.user.id), c => c.charCodeAt(0));\n      const credential = await navigator.credentials.create({\n        publicKey: options\n      });\n      const attestationResponse = {\n        id: credential.id,\n        rawId: btoa(String.fromCharCode(...new Uint8Array(credential.rawId))),\n        response: {\n          clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(credential.response.clientDataJSON))),\n          attestationObject: btoa(String.fromCharCode(...new Uint8Array(credential.response.attestationObject)))\n        },\n        type: credential.type\n      };\n      const result = await axios.post('http://localhost:3001/register', {\n        username,\n        attestationResponse\n      }, {\n        withCredentials: true\n      });\n      setMessage(result.data);\n    } catch (error) {\n      setMessage(`Error registering: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  const handleLoginRequest = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/login-request', {\n        username\n      }, {\n        withCredentials: true\n      });\n      const options = response.data;\n      options.challenge = Uint8Array.from(atob(options.challenge), c => c.charCodeAt(0));\n      options.allowCredentials = options.allowCredentials.map(cred => {\n        return {\n          ...cred,\n          id: Uint8Array.from(atob(cred.id), c => c.charCodeAt(0))\n        };\n      });\n      const assertion = await navigator.credentials.get({\n        publicKey: options\n      });\n      const assertionResponse = {\n        id: assertion.id,\n        rawId: btoa(String.fromCharCode(...new Uint8Array(assertion.rawId))),\n        response: {\n          clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(assertion.response.clientDataJSON))),\n          authenticatorData: btoa(String.fromCharCode(...new Uint8Array(assertion.response.authenticatorData))),\n          signature: btoa(String.fromCharCode(...new Uint8Array(assertion.response.signature))),\n          userHandle: assertion.response.userHandle ? btoa(String.fromCharCode(...new Uint8Array(assertion.response.userHandle))) : null\n        },\n        type: assertion.type\n      };\n      const result = await axios.post('http://localhost:3001/login', {\n        username,\n        assertionResponse\n      }, {\n        withCredentials: true\n      });\n      setMessage(result.data);\n    } catch (error) {\n      setMessage(`Error logging in: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/logout', {\n        username\n      }, {\n        withCredentials: true\n      });\n      setMessage(response.data);\n    } catch (error) {\n      setMessage(`Error logging out: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  const fetchCurrentUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/current-users', {\n        withCredentials: true\n      });\n      setCurrentUsers(response.data);\n    } catch (error) {\n      setMessage(`Error fetching current users: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FIDO2 Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegisterRequest,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoginRequest,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCurrentUsers,\n      children: \"Fetch Current Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3kH2GxfaY4MPSvbZPNZTAzJ4Nbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","message","setMessage","currentUsers","setCurrentUsers","handleRegisterRequest","response","post","withCredentials","options","data","challenge","Uint8Array","from","atob","c","charCodeAt","user","id","credential","navigator","credentials","create","publicKey","attestationResponse","rawId","btoa","String","fromCharCode","clientDataJSON","attestationObject","type","result","error","handleLoginRequest","allowCredentials","map","cred","assertion","get","assertionResponse","authenticatorData","signature","userHandle","handleLogout","fetchCurrentUsers","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Public/Android/FIDO2_webapp/fido2-app-client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [currentUsers, setCurrentUsers] = useState([]);\r\n\r\n  const handleRegisterRequest = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/register-request', { username }, { withCredentials: true });\r\n      const options = response.data;\r\n      options.challenge = Uint8Array.from(atob(options.challenge), c => c.charCodeAt(0));\r\n      options.user.id = Uint8Array.from(atob(options.user.id), c => c.charCodeAt(0));\r\n\r\n      const credential = await navigator.credentials.create({ publicKey: options });\r\n      const attestationResponse = {\r\n        id: credential.id,\r\n        rawId: btoa(String.fromCharCode(...new Uint8Array(credential.rawId))),\r\n        response: {\r\n          clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(credential.response.clientDataJSON))),\r\n          attestationObject: btoa(String.fromCharCode(...new Uint8Array(credential.response.attestationObject))),\r\n        },\r\n        type: credential.type,\r\n      };\r\n\r\n      const result = await axios.post('http://localhost:3001/register', { username, attestationResponse }, { withCredentials: true });\r\n      setMessage(result.data);\r\n    } catch (error) {\r\n      setMessage(`Error registering: ${error.response ? error.response.data : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleLoginRequest = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login-request', { username }, { withCredentials: true });\r\n      const options = response.data;\r\n      options.challenge = Uint8Array.from(atob(options.challenge), c => c.charCodeAt(0));\r\n      options.allowCredentials = options.allowCredentials.map(cred => {\r\n        return { ...cred, id: Uint8Array.from(atob(cred.id), c => c.charCodeAt(0)) };\r\n      });\r\n\r\n      const assertion = await navigator.credentials.get({ publicKey: options });\r\n      const assertionResponse = {\r\n        id: assertion.id,\r\n        rawId: btoa(String.fromCharCode(...new Uint8Array(assertion.rawId))),\r\n        response: {\r\n          clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(assertion.response.clientDataJSON))),\r\n          authenticatorData: btoa(String.fromCharCode(...new Uint8Array(assertion.response.authenticatorData))),\r\n          signature: btoa(String.fromCharCode(...new Uint8Array(assertion.response.signature))),\r\n          userHandle: assertion.response.userHandle ? btoa(String.fromCharCode(...new Uint8Array(assertion.response.userHandle))) : null,\r\n        },\r\n        type: assertion.type,\r\n      };\r\n\r\n      const result = await axios.post('http://localhost:3001/login', { username, assertionResponse }, { withCredentials: true });\r\n      setMessage(result.data);\r\n    } catch (error) {\r\n      setMessage(`Error logging in: ${error.response ? error.response.data : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/logout', { username }, { withCredentials: true });\r\n      setMessage(response.data);\r\n    } catch (error) {\r\n      setMessage(`Error logging out: ${error.response ? error.response.data : error.message}`);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentUsers = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/current-users', { withCredentials: true });\r\n      setCurrentUsers(response.data);\r\n    } catch (error) {\r\n      setMessage(`Error fetching current users: ${error.response ? error.response.data : error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>FIDO2 Authentication</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={e => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n      />\r\n      <button onClick={handleRegisterRequest}>Register</button>\r\n      <button onClick={handleLoginRequest}>Sign In</button>\r\n      <button onClick={handleLogout}>Sign Out</button>\r\n      <button onClick={fetchCurrentUsers}>Fetch Current Users</button>\r\n      <div>{message}</div>\r\n      <ul>\r\n        {currentUsers.map(user => (\r\n          <li key={user}>{user}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}